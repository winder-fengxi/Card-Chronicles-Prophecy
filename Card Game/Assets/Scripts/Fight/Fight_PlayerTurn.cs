using System.Collections; using System.Collections.Generic; using System.Xml.Linq;
using UnityEditor.Experimental.GraphView;
using UnityEngine;  public class Fight_PlayerTurn : FightUnit {     public override void Init()     {         //Debug.Log("playerTime");          UIManager.Instance.ShowTip("玩家回合", Color.green, delegate ()         {             //回复行动力             FightManager.Instance.CurPowerCount = 100;             UIManager.Instance.GetUI<FightUI>("FightUI").UpdatePower();             //卡堆己经没有卡重新初始化             if (FightCardManager.Instance.HasCard() == false)             {                  FightCardManager.Instance.Init();                 //更新弃卡堆数量                 UIManager.Instance.GetUI<FightUI>("FightUI").UpdateUsedCardCount();             }              //抽卡             Debug.Log("抽卡");             UIManager.Instance.GetUI<FightUI>("FightUI").CreateCardItem(5);//抽5张             UIManager.Instance.GetUI<FightUI>("FightUI").UpdateCardItemPos();//更新卡牌位置              //更新卡牌数             UIManager.Instance.GetUI<FightUI>("FightUI").UpdateCardCount();              for(int i=0;i<EnemyManeger.Instance.enemyList.Count;i++)             {                 if (EnemyManeger.Instance.enemyList[i].ShenweiCheck&& EnemyManeger.Instance.enemyList[i].ShenweiCheckUse)                 {                     EnemyManeger.Instance.enemyList[i].Hit(8);                     EnemyManeger.Instance.enemyList[i].ShenweiCheck = false;                     EnemyManeger.Instance.enemyList[i].ShenweiCheckUse = false;                 }                 if (EnemyManeger.Instance.enemyList[i].poisonnum > 0)                 {                     EnemyManeger.Instance.enemyList[i].Hit(1);                     EnemyManeger.Instance.enemyList[i].poisonnum--;                 }                 EnemyManeger.Instance.enemyList[i].easyhit = false;
                if (EnemyManeger.Instance.enemyList[i].FireNum > 0)
                {
                    Debug.Log("敌人" + EnemyManeger.Instance.enemyList[i].IdName + "受到灼烧点数：" + EnemyManeger.Instance.enemyList[i].FireNum);
                    EnemyManeger.Instance.enemyList[i].FireNum--;
                    EnemyManeger.Instance.enemyList[i].Hit(EnemyManeger.Instance.enemyList[i].FireNum + 1);
                }             }
             for (int i=0;i<FollowerManeger.Instance.followerList.Count;i++)             {                 if (FollowerManeger.Instance.followerList[i].SeparationCheck)                 {                     FollowerManeger.Instance.DeleteFollower(FollowerManeger.Instance.followerList[i]);                 }             }         });     } }